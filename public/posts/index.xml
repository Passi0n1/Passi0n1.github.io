<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Passi0n1&#39;s Blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Passi0n1&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Rise. 本站遵循 CC-BY-NC 4.0 协议</copyright>
    <lastBuildDate>Tue, 08 Apr 2025 11:25:05 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bybit 被盗事件分析</title>
      <link>http://localhost:1313/posts/vol.2-bybit%E8%A2%AB%E7%9B%97/</link>
      <pubDate>Tue, 08 Apr 2025 11:25:05 +0000</pubDate>
      <guid>http://localhost:1313/posts/vol.2-bybit%E8%A2%AB%E7%9B%97/</guid>
      <description>案件元数据 被盗合约：0x1db92e2eebc8e0c075a02bea49a2935bcd2dfcf4 初始黑客地址：0x47666fab8bd0ac7003bce3f5c3585383f09486e2 黑客部署的恶意合约1：0x96221423681a6d52e184d440a8efcebb105c7242 黑客部署的恶意合约2：0xbDd077f651EBe7f7b3cE16fe5F2b025BE2969516 修改逻辑合约交易：0x46deef0f52e3a983b67abf4714448a41dd7ffd6d32d32da69d62081c68ad7882 盗窃交易1：0x25800d105db4f21908d646a7a3db849343737c5fba0bc5701f782bf0e75217c9 盗窃交易2：0xb61413c495fdad6114a7aa863a00b2e3c28945979a10885b12b30316ea9f072c 盗窃交易3：0xbcf316f5835362b7f1586215173cc8b294f5499c60c029a3de6318bf25ca7b20 盗窃交易4：0xa284a1bc4c7e0379c924c73fcea1067068635507254b03ebbbd3f4e222c1fae0 盗窃交易5：0x847b8403e8a4816a4de1e63db321705cdb6f998fb01ab58f653b863fda988647 Safe 事后审计报告：https://archive.ph/OxemM 官方报告（已失效）：https://docsend.com/view/s/rmdi832mpt8u93s7 OneKey 评价：https://x.com/OneKeyCN/status/1894783804512051469 23pd 评价：https://x.com/im23pds/status/1894637152392434013 ScamSniffer 分析：https://x.com/realScamSniffer/status/1894910207052128263 黑客测试交易：https://etherscan.io/tx/0xbe42ca77d43686c822a198c3641f3dadd1edcb5fde22fbc1738b3298a9c25ddb Verichains 报告：https://github.com/verichains/public-audit-reports/blob/main/Bybit%20Incident%20Investigation%20-%20Preliminary%20Report%20v1.0%20(for%20public%20release).pdf Safe 官网存档：https://web.archive.org/web/20250000000000*/safe.global ChromeCacheView 下载地址：https://www.nirsoft.net/utils/chrome_cache_view.html 事件涉及一笔修改合约交易和五笔盗窃交易：&#xA;Safe 合约被篡改的 JS 恶意文件如下：&#xA;恶意存档： https://web.archive.org/web/20250219172905/https://app.safe.global/_next/static/chunks/pages/_app-52c9031bfa03da47.js https://web.archive.org/web/20250219172905/https://app.safe.global/_next/static/chunks/6514.b556851795a4cbaa.js 正常存档： https://web.archive.org/web/20250219111919/https://app.safe.global/_next/static/chunks/pages/_app-52c9031bfa03da47.js https://web.archive.org/web/20250219111919/https://app.safe.global/_next/static/chunks/6514.b556851795a4cbaa.js 注：6514.b556851795a4cbaa.js 文件暂未找到，暂跳过分析。 具体分析 JS 代码分析 以下是被篡改的核心 JS 代码片段：&#xA;let sd = c; // Safe SDK 实例 let se = e; // 交易对象 let st = t; // 交易选项 let wa = [&amp;#34;0x1db92e2eebc8e0c075a02bea49a2935bcd2dfcf4&amp;#34;, &amp;#34;0x19c6876e978d9f128147439ac4cd9ea2582cd141&amp;#34;]; // 目标 Safe 地址 let ba = [&amp;#34;0x828424517f9f04015db02169f4026d57b2b07229&amp;#34;, &amp;#34;0x7c1091cf6f36b0140d5e2faf18c3be29fee42d97&amp;#34;]; // 目标签名者地址 let ta = &amp;#34;0x96221423681a6d52e184d440a8efcebb105c7242&amp;#34;; // 黑客恶意合约地址 let da = &amp;#34;0xa9059cbb000000000000000000000000bdd077f651ebe7f7b3ce16fe5f2b025be29695160000000000000000000000000000000000000000000000000000000000000000&amp;#34;; // 恶意数据 let op = 1; // 操作类型（delegatecall） let vl = 0; // 交易价值 let sga = 45746; // Safe 交易 gas 限制 let sf = sd.</description>
    </item>
    <item>
      <title>StephereNFTs 遭遇重入攻击分析</title>
      <link>http://localhost:1313/posts/vol.1--step-hero%E9%87%8D%E5%85%A5%E6%94%BB%E5%87%BB/</link>
      <pubDate>Fri, 21 Feb 2025 11:25:05 +0000</pubDate>
      <guid>http://localhost:1313/posts/vol.1--step-hero%E9%87%8D%E5%85%A5%E6%94%BB%E5%87%BB/</guid>
      <description>攻击概述 2025 年 2 月 ，StephereNFTs 遭遇了一起严重的重入攻击，攻击者通过精心构造的恶意合约，利用智能合约逻辑漏洞，成功盗取了大量资金。&#xA;参考地址： https://nickfranklin.site/2025/02/21/stepheronfts-attacked/&#xA;相关地址 受害合约地址：0x9823e10a0bf6f64f59964be1a7f83090bf5728ab 攻击者地址：0xFb1cc1548D039f14b02cfF9aE86757Edd2CDB8A5 恶意合约1：0xd4c80700ca911d5d3026a595e12aa4174f4cacb3 恶意合约2：0xb4c32404de3367ca94385ac5b952a7a84b5bdf76 恶意合约3：0x8f327e60fb2a7928c879c135453bd2b4ed6b0fe9 攻击交易 (tx)：https://bscscan.com/tx/0xef386a69ca6a147c374258a1bf40221b0b6bd9bc449a7016dbe5240644581877 攻击步骤解析 1. 部署恶意合约 攻击者首先部署了多个恶意合约，以便后续进行重入攻击。&#xA;图1 2. 通过闪电贷获取初始资金 攻击者利用闪电贷借入了一笔资金，用于后续触发合约的奖励机制。&#xA;图2 图3 通过购买资产获取奖励资格 3. 通过重入攻击不断获取受害合约资金 攻击者发现受害合约的奖励机制存在漏洞：&#xA;在领取奖励时，合约会检查推荐奖励的数量。 但由于合约先发放奖励，再将奖励计数清零，导致可以在清零前重复调用领取奖励函数，实现重入攻击。 攻击者利用这一漏洞，不断调用恶意合约，通过递归方式重复领取奖励，最终盗取了大量资金。&#xA;关键漏洞分析 该攻击的核心漏洞在于 先发奖励后清零 的逻辑顺序问题，导致了经典的重入攻击 (Reentrancy Attack)。&#xA;漏洞代码示例：&#xA;function claimReferral(address varg0) public nonPayable { find similar require(msg.data.length - 4 &amp;gt;= 32); require(!_paused, Error(&amp;#39;Pausable: paused&amp;#39;)); require(owner_5[msg.sender][varg0], Error(&amp;#39;not-enough-money&amp;#39;)); 0x2d1e(varg0, owner_5[msg.sender][varg0], msg.sender); owner_5[msg.sender][varg0] = 0; emit 0x9c21c092f05b64df5ae0cbf557b9bf4e9695cdbeaa13fcf9a0831bce847f0cfb(msg.sender, varg0, owner_5[msg.sender][varg0]); } 攻击者可以重复调用重新调用 claimReferral，从而在清零前多次获取奖励。</description>
    </item>
  </channel>
</rss>
